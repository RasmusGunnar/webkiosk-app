// Minimal PWA SW: cachen kun hostens egne filer (ikke A/B html)const CACHE = 'wk-shell-v1';const PRECACHE = [  './index.html',  './style.css',  './app.js',  './manifest.webmanifest',  './assets/icon-192.png',  './assets/icon-512.png'];self.addEventListener('install', (e) => {  e.waitUntil(caches.open(CACHE).then((c) => c.addAll(PRECACHE)));  self.skipWaiting();});self.addEventListener('activate', (e) => {  e.waitUntil(    caches.keys().then(keys =>      Promise.all(keys.filter(k => k !== CACHE).map(k => caches.delete(k)))    )  );  self.clients.claim();});// Network-first for alt andet; vi rører IKKE A/B html som ikke er i PRECACHEself.addEventListener('fetch', (e) => {  const url = new URL(e.request.url);  // Lad alt der ikke er vores egen shell gå direkte til netværket  const isShell = PRECACHE.some(p => url.pathname.endsWith(p.replace('./','/')));  if (!isShell) return; // bypass SW for A/B og andre ressourcer  e.respondWith(    fetch(e.request).then(res => {      const resClone = res.clone();      caches.open(CACHE).then(c => c.put(e.request, resClone)).catch(()=>{});      return res;    }).catch(() => caches.match(e.request))  );});